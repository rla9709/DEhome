<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.userMapper">
	<!-- 닉네임 중복 체크 -->
	<select id="nickCheck" parameterType="UserDTO" resultType="string">
		select user_nick from user where user_nick = #{user_nick}
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="UserDTO" resultType="string">
		select user_id from user where user_id = #{user_id}
	</select>
	
	<!-- 전화번호 중복 체크 -->
	<select id="pnumCheck" parameterType="UserDTO" resultType="string">
		select user_pnum from user where user_pnum = #{user_pnum}
	</select>
	
	<!-- 업체명 중복 체크 -->
	<select id="comCheck" parameterType="UserDTO" resultType="string">
		select com_name from user where com_name = #{com_name}
	</select>
	
	<!-- 회원가입 -->
	<insert id="register">
		insert into user values(#{user_nick}
						, #{user_id}
						, #{user_pw}
						, #{user_name}
						, #{user_pnum}
						, #{user_email}
						, #{user_email2}
						, #{user_sex}
						, #{user_addr1}
						, #{user_addr2}
						, #{user_addr3}
						, #{user_addr4}
						, now()
						, #{com_name}
						, #{login_type})
	</insert>
	
	<!-- 로그인 -->
	<select id="login" parameterType="UserDTO" resultType="UserDTO">
		select * from user where user_id = #{user_id} and user_pw = #{user_pw}
	</select>
	<!-- 카카오 로그인후 추가정보 등록 여부 확인 -->
	<select id="kakaonickCheck" parameterType="UserDTO" resultType="string">
		select user_nick from user where user_nick = #{kakaonick}
	</select>
	<!-- 네이버 로그인후 추가정보 등록 여부 확인 -->
	<select id="navernickCheck" parameterType="UserDTO" resultType="string">
		select user_nick from user where user_nick = #{navernick}
	</select>
	
	<!-- 아이디 찾기 --> 
	<select id="findID" resultType="UserDTO" parameterType="UserDTO">
		select user_id, reg_date, login_type 
			from user 
			where user_name = #{user_name} 
			and user_email = #{user_email} 
			and user_email2 = #{user_email2}
			
	</select>
	
	<!-- 비밀번호 찾기 --> 
	<select id="findPW" parameterType="UserDTO" resultType="String">
		select concat(left(user_pw,2),repeat(replace(mid(user_pw,3,length(user_pw)-4),mid(user_pw,3,length(user_pw)-4),'*'), length(mid(user_pw,3,length(user_pw)-4))),right(user_pw,2))
			from user 
			where user_id = #{user_id} 
			and user_name = #{user_name} 
			and user_email = #{user_email} 
			and user_email2 = #{user_email2}
	</select>	
	
</mapper>

















