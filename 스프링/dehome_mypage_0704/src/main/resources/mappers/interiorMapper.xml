<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.interiorMapper">
	<!-- 세션 유저의 위치정보 받아오기 -->
	<select id="userAddr" resultType="string">
		select case when left(user_addr2,1) = '경' 
					then substring_index(user_addr2,' ', 3) 
					when left(user_addr2,1) = '전' 
					then substring_index(user_addr2,' ', 3) 
					when left(user_addr2,1) = '충' 
					then substring_index(user_addr2,' ', 3) 
					when left(user_addr2,1) = '강' 
					then substring_index(user_addr2,' ', 3) 
					else substring_index(user_addr2,' ', 2) 
					end 
		from user where user_nick = #{user_nick}
	</select>
	
	<!-- 위치값에 해당하는 기업 가지고 오기 -->
	<select id="locList" parameterType="InteriorDTO" resultType="InteriorDTO">
		select com_name, com_addr, com_rating, com_title, com_content, com_contract, com_file, com_thumbfile, re_count 
		from company 
		where com_addr like #{addr} 
		order by com_rating desc
		limit 0, 3
		<!-- 후에 업체 많이 추가해두면 처음에 9개 먼저 보여주도록 아래 소스로 변경 -->
		<!--  limit 0, 10  -->
	</select>
	
	<!-- 더보기 클릭시 추가로 기업 가지고 오기 -->
	<select id="moreLocList" parameterType="InteriorDTO" resultType="InteriorDTO">
		select com_name, com_addr, com_rating, com_title, com_content, com_contract, com_file, com_thumbfile, re_count 
		from company  
		where com_addr like #{addr} 
		order by com_rating desc
		limit #{startPage}, 3
	</select>
	
	<!-- 세션 유저의 업체명 받아오기 -->
	<select id="userComName" resultType="string">
		select com_name from user where user_nick = #{user_nick}
	</select>
	
	<!-- 해당 업체의 정보 받아오기 -->
	<select id="companyInfo" parameterType="InteriorDTO" resultType="InteriorDTO">
		select com_name, com_addr, com_rating, com_title, com_content, com_contract, com_file, com_thumbfile, re_count 
		from company
		where com_name = #{com_name}
	</select>
	
	<!-- 해당 업체의 리뷰 받아오기 -->
	<select id="comReivew" parameterType="InteriorDTO" resultType="InteriorDTO">
		select re_no, user_nick, re_title, re_content, re_file, re_thumbfile, re_date, re_interest 
		from review 
		where com_name = #{com_name} 
		order by re_interest
		limit 0, 2
	</select>
	
	<!-- 더보기 클릭시 추가로 리뷰 가지고 오기 -->
	<select id="moreReList" parameterType="InteriorDTO" resultType="InteriorDTO">
		select re_no, user_nick, re_title, re_content, re_file, re_thumbfile, re_date, re_interest 
		from review 
		where com_name = #{com_name} 
		order by re_interest
		limit #{startRePage}, 2
	</select>
	
	
	<!-- 해당 업체의 시공사례 받아오기 -->
	<select id="comExample" parameterType="InteriorDTO" resultType="InteriorDTO">
		select ex_no, ex_title, ex_file, ex_thumbfile
		from con_example 
		where com_name = #{com_name} 
		order by ex_no desc
		limit 0, 3
	</select>
	
	<!-- 더보기 클릭시 추가로 리뷰 가지고 오기 -->
	<select id="moreExList" parameterType="InteriorDTO" resultType="InteriorDTO">
		select ex_no, ex_title, ex_file, ex_thumbfile 
		from con_example 
		where com_name = #{com_name} 
		order by ex_no desc
		limit #{startExPage}, 3
	</select>
	
	<!-- 등록전인 기업 이름 들고오기 -->
	<select id="notInCompany" resultType="string">
		select com_name
		from user
		where user.com_name not in
		(select com_name from company)
		order by com_name desc
	</select>
	
	<!-- 업체 등록하기 -->
	<insert id="companyRegist" parameterType="InteriorDTO">
		insert into company(com_name, com_addr, com_title, com_content, com_file, com_thumbfile, com_contract, com_rating, re_sum, re_count) 
		values(#{com_name}, #{com_addr}, #{com_title}, #{com_content}, #{com_file}, #{com_thumbfile}, 0, 0, 0, 0)
	</insert>
	
	<!-- 리뷰 등록하기 -->
	<insert id="reviewRegist" parameterType="InteriorDTO">
		insert into review (com_name, user_nick, re_title, re_content, re_file, re_thumbfile, re_date, re_interest) 
		values(#{com_name}, #{user_nick}, #{re_title}, #{re_content}, #{re_file}, #{re_thumbfile}, now(),0);
	</insert>
	
	<!-- 리뷰 등록시 해당 총점 증가 -->
	<update id="reSum" parameterType="InteriorDTO">
		update company set re_sum = re_sum + #{com_rating} where com_name = #{com_name};
	</update>
	
	
	<!-- 리뷰 등록시 리뷰 카운트 증가 -->
	<update id="reCount" parameterType="InteriorDTO">
		update company set re_count = re_count + 1 where com_name = #{com_name};
	</update>
	
	<!-- 리뷰 등록시 업체 평점 업데이트 -->
	<update id="reRating" parameterType="InteriorDTO">
		update company set com_rating = round((re_sum / re_count),1) where com_name = #{com_name};
	</update>
	
	<!-- 해당 리뷰 들고오기 -->
	<select id="reviewShow" parameterType="InteriorDTO" resultType="InteriorDTO">
		select com_name, user_nick, re_title, re_content, re_file, re_date, re_interest 
		from review 
		where re_no = #{re_no};
	</select>
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>