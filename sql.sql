
CREATE TABLE `USEDTRADE` (
	`TRADE_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`CATEGORY`	VARCHAR(40)	NOT NULL,
	`TRADE_TITLE`	VARCHAR(40)	NOT NULL,
	`TRADE_CONTENT`	VARCHAR(4000)	NOT NULL,
	`TRADE_DATE`	DATETIME	NOT NULL,
	`TRADE_COUNT`	INT	NOT NULL,
	`TRADE_EVALUE`	INT	NULL,
	`TRADE_PRICE`	VARCHAR(40)	NOT NULL,
	`TRADE_PHOTO`	VARCHAR(200)	NOT NULL,
	`TRADE_THUMB`	varchar(200)	NOT NULL,
	`TRADE_COMPLETE`	INT	NOT NULL	COMMENT '0또는 1로 표기',
	`TRADE_BUYER`	VARCHAR(20)	NULL
);


CREATE TABLE `USER` (
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`USER_ID`	VARCHAR(20)	NULL,
	`USER_PW`	VARCHAR(20)	NULL,
	`USER_NAME`	VARCHAR(20)	NULL,
	`USER_PNUM`	INT	NULL	COMMENT '(번호만11자리)',
	`USER_EMAIL`	VARCHAR(30)	NULL,
	`USER_EMAIL2`	VARCHAR(30)	NULL,
	`USER_SEX`	VARCHAR(4)	NULL	COMMENT '(남,여)',
	`USER_ADDR`	VARCHAR(100)	NULL,
	`USER_ADDR2`	VARCHAR(100)	NULL,
	`USER_ADDR3`	VARCHAR(100)	NULL,
	`USER_ADDR4`	VARCHAR(100)	NULL,
	`REG_DATE`	DATETIME	NULL,
	`COM_NAME`	VARCHAR(20)	NULL,
	`LOGIN_TYPE`	VARCHAR(20)	NULL
);

CREATE TABLE `QNA` (
	`QNA_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`QNA_TITLE`	VARCHAR(40)	NULL,
	`QNA_CONTENT`	VARCHAR(4000)	NULL,
	`QNA_DATE`	DATETIME	NULL,
	`QNA_COUNT`	INT	NULL,
	`QNA_TYPE`	VARCHAR(20)	NULL	COMMENT '(회원관련 OR 중고거래 OR 인테리어)',
	`QNA_PW`	VARCHAR(20)	NULL,
	`QNA_PROCESS`	VARCHAR(20)	NULL	COMMENT '답변완료:complete
미답변:processing'
);

CREATE TABLE `QNA_C` (
   	 `QNA_NO`	INT	NOT NULL,
	`USER_NICK2`	VARCHAR(20)	NOT NULL,
	`QNA_C_CONTENT`	VARCHAR(4000)	NULL,
	`QNA_C_DATE`	DATETIME	NULL
);

CREATE TABLE `INTERIOR_TIP` (
	`TIP_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`CATEGORY`	VARCHAR(40)	NOT NULL,
	`TIP_TITLE`	VARCHAR(50)	NOT NULL,
	`TIP_CONTENT`	VARCHAR(5000)	NOT NULL,
	`TIP_FILE`	VARCHAR(100)	NULL,
	`TIP_DATE`	DATETIME	NOT NULL,
	`TIP_COUNT`	INT	NOT NULL,
	`TIP_BOOKMARK`	INT	NULL,
	`TIP_THUMB`	VARCHAR(200)	NULL,
	`TIP_BMUSER`	VARCHAR(5000)	NULL
);

CREATE TABLE `NOTICE` (
	`NOT_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`NOT_TITLE`	VARCHAR(50)	NULL,
	`NOT_CONTENT`	VARCHAR(5000)	NULL,
	`NOT_DATE`	DATETIME	NULL,
	`NOT_COUNT`	INT	NULL,
	`NOT_MENU`	VARCHAR(10)	NOT NULL
);

CREATE TABLE `TRADE_CHAT` (
	`TRADE_CHATNO`	INT	NOT NULL,
	`TRADE_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`TO_NICK`	VARCHAR(20)	NOT NULL,
	`TRADE_CHATCONTENT`	VARCHAR(300)	NOT NULL,
	`TRADE_CHATTIME`	DATETIME	NOT NULL,
	`TRADE_CHATREAD`	INT	NOT NULL
);

CREATE TABLE `REVIEW` (
	`RE_NO`	INT	NOT NULL,
	`COM_NAME`	VARCHAR(20)	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`RE_TITLE`	VARCHAR(50)	NULL,
	`RE_CONTENT`	VARCHAR(5000)	NULL,
	`RE_FILE`	VARCHAR(100)	NULL,
	`RE_THUMBFILE`	VARCHAR(200)	NULL,
	`RE_DATE`	DATETIME	NULL,
	`RE_INTEREST`	INT	NULL	DEFAULT 0
);

CREATE TABLE `CON_EXAMPLE` (
	`EX_NO`	INT	NOT NULL,
	`COM_NAME`	VARCHAR(20)	NOT NULL,
	`EX_TITLE`	VARCHAR(30)	NULL,
	`EX_CONTENT`	VARCHAR(5000)	NULL,
	`EX_FILE`	VARCHAR(100)	NULL,
	`EX_THUMBFILE`	VARCHAR(200)	NULL,
	`REG_DATE`	DATETIME	NULL
);

CREATE TABLE `COUNSEL_CHAT` (
	`COUN_CHATNO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`COM_NAME`	VARCHAR(20)	 NOT NULL,
	`TO_NICK`	VARCHAR(20)	NULL,
	`COUN_CHATCONTENT`	VARCHAR(1000)	NULL,
	`COUN_CHATTIME`	DATETIME	NULL,
	`COUN_CHATREAD`	INT	NULL
);

CREATE TABLE `BOOKMARK` (
	`TIP_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL
);

CREATE TABLE `COMPANY` (
	`COM_NAME`	VARCHAR(20)	NOT NULL,
	`COM_ADDR`	VARCHAR(100)	NULL,
	`COM_RATING`	FLOAT	NULL	DEFAULT 0,
	`COM_TITLE`	VARCHAR(50)	NULL,
	`COM_CONTENT`	VARCHAR(5000)	NULL,
	`COM_CONTRACT`	INT	NULL,
	`COM_FILE`	VARCHAR(200)	NULL,
	`COM_THUMBFILE`	VARCHAR(200)	NULL,
	`RE_SUM`	INT	NOT NULL	DEFAULT 0,
	`RE_COUNT`	INT	NOT NULL	DEFAULT 0
);

CREATE TABLE `TRADE_BOARD` (
	`BOARD_ID`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`BOARD_TITLE`	VARCHAR(40)	NULL,
	`BOARD_CONTENT`	VARCHAR(4000)	NULL,
	`BOARD_DATE`	DATETIME	NULL,
	`BOARD_COUNT`	INT	NULL,
	`BOARD_PW`	VARCHAR(20)	NULL,
	`BOARD_PAGENUM`	INT	NULL
);

CREATE TABLE `TR_INTEREST` (
	`TRADE_NO`	INT	NOT NULL,
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`TRADE_INTEREST`	INT	NOT NULL
);

CREATE TABLE `RE_INTEREST` (
	`USER_NICK`	VARCHAR(20)	NOT NULL,
	`RE_NO`	INT	NOT NULL
);

ALTER TABLE `USEDTRADE` ADD CONSTRAINT `PK_USEDTRADE` PRIMARY KEY (
	`TRADE_NO`
);

ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (
	`USER_NICK`
);

ALTER TABLE `QNA` ADD CONSTRAINT `PK_QNA` PRIMARY KEY (
	`QNA_NO`
);

ALTER TABLE `INTERIOR_TIP` ADD CONSTRAINT `PK_INTERIOR_TIP` PRIMARY KEY (
	`TIP_NO`
);

ALTER TABLE `NOTICE` ADD CONSTRAINT `PK_NOTICE` PRIMARY KEY (
	`NOT_NO`
);

ALTER TABLE `TRADE_CHAT` ADD CONSTRAINT `PK_TRADE_CHAT` PRIMARY KEY (
	`TRADE_CHATNO`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `PK_REVIEW` PRIMARY KEY (
	`RE_NO`
);

ALTER TABLE `CON_EXAMPLE` ADD CONSTRAINT `PK_CON_EXAMPLE` PRIMARY KEY (
	`EX_NO`
);

ALTER TABLE `COUNSEL_CHAT` ADD CONSTRAINT `PK_COUNSEL_CHAT` PRIMARY KEY (
	`COUN_CHATNO`
);

ALTER TABLE `COMPANY` ADD CONSTRAINT `PK_COMPANY` PRIMARY KEY (
	`COM_NAME`
);

ALTER TABLE `TRADE_BOARD` ADD CONSTRAINT `PK_TRADE_BOARD` PRIMARY KEY (
	`BOARD_ID`
);

ALTER TABLE `USEDTRADE` ADD CONSTRAINT `FK_USER_TO_USEDTRADE_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `QNA` ADD CONSTRAINT `FK_USER_TO_QNA_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `QNA_C` ADD CONSTRAINT `FK_QNA_TO_QNA_C_1` FOREIGN KEY (
	`QNA_NO`
)
REFERENCES `QNA` (
	`QNA_NO`
);

ALTER TABLE `QNA_C` ADD CONSTRAINT `FK_USER_TO_QNA_C_1` FOREIGN KEY (
	`USER_NICK2`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `INTERIOR_TIP` ADD CONSTRAINT `FK_USER_TO_INTERIOR_TIP_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `NOTICE` ADD CONSTRAINT `FK_USER_TO_NOTICE_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `TRADE_CHAT` ADD CONSTRAINT `FK_USEDTRADE_TO_TRADE_CHAT_1` FOREIGN KEY (
	`TRADE_NO`
)
REFERENCES `USEDTRADE` (
	`TRADE_NO`
);

ALTER TABLE `TRADE_CHAT` ADD CONSTRAINT `FK_USER_TO_TRADE_CHAT_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_COMPANY_TO_REVIEW_1` FOREIGN KEY (
	`COM_NAME`
)
REFERENCES `COMPANY` (
	`COM_NAME`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_USER_TO_REVIEW_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `CON_EXAMPLE` ADD CONSTRAINT `FK_COMPANY_TO_CON_EXAMPLE_1` FOREIGN KEY (
	`COM_NAME`
)
REFERENCES `COMPANY` (
	`COM_NAME`
);

ALTER TABLE `BOOKMARK` ADD CONSTRAINT `FK_INTERIOR_TIP_TO_BOOKMARK_1` FOREIGN KEY (
	`TIP_NO`
)
REFERENCES `INTERIOR_TIP` (
	`TIP_NO`
);

ALTER TABLE `BOOKMARK` ADD CONSTRAINT `FK_USER_TO_BOOKMARK_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `TRADE_BOARD` ADD CONSTRAINT `FK_USER_TO_TRADE_BOARD_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `TR_INTEREST` ADD CONSTRAINT `FK_USEDTRADE_TO_TR_INTEREST_1` FOREIGN KEY (
	`TRADE_NO`
)
REFERENCES `USEDTRADE` (
	`TRADE_NO`
);

ALTER TABLE `TR_INTEREST` ADD CONSTRAINT `FK_USER_TO_TR_INTEREST_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `RE_INTEREST` ADD CONSTRAINT `FK_USER_TO_RE_INTEREST_1` FOREIGN KEY (
	`USER_NICK`
)
REFERENCES `USER` (
	`USER_NICK`
)ON DELETE CASCADE;

ALTER TABLE `RE_INTEREST` ADD CONSTRAINT `FK_REVIEW_TO_RE_INTEREST_1` FOREIGN KEY (
	`RE_NO`
)
REFERENCES `REVIEW` (
	`RE_NO`
);
set foreign_key_checks = 0;
commit;

ALTER TABLE INTERIOR_TIP MODIFY column tip_no INT NOT NULL AUTO_INCREMENT; 

ALTER TABLE USEDTRADE MODIFY COLUMN TRADE_NO INT NOT NULL AUTO_INCREMENT;

ALTER TABLE TRADE_CHAT MODIFY COLUMN TRADE_CHATNO INT NOT NULL AUTO_INCREMENT;
ALTER TABLE TRADE_BOARD MODIFY board_id INT NOT NULL AUTO_INCREMENT;
alter table REVIEW modify re_no int not null auto_increment;

alter table CON_EXAMPLE modify ex_no int not null auto_increment;

alter table QNA modify column qna_no int not null auto_increment; 
alter table NOTICE modify column not_no int not null auto_increment;
set foreign_key_checks = 1;
commit;

